openapi: 3.0.1
info:
  title: EduCare API
  description: 'Esta API permite a Integração de seus recurso '
  termsOfService: http://localhost/terms/
  contact:
    name: Fabrica de Software
    url: http://localhost/fabricasoftware
    email: wellingtonvictoralves@hotmail.com
  license:
    name: Apache 2.0
    url: https://www.apache.org/licenses/LICENSE-2.0.html
  version: 1.0.0
servers:
- url: https://virtserver.swaggerhub.com/EduCare/EduCareAPI/1.0.0
  description: SwaggerHub API Auto Mocking
- url: http://localhost:3333
  description: EduCareAPI
- url: https://www.google.com/EduCare/EduCareAPI/1.0.0
  description: Google Server
tags:
- name: user
  description: "Operações do Usuário no Sistema, permite a criação, login, atualizaç\
    ão e pesquisa."
- name: userAddress
  description: "Permite o cadastro, edição, pesquisa e exclusão de endereço"
- name: phone
  description: "Permite o cadastro, edição, pesquisa e exclusão de telefone"
- name: company
  description: "Permite o cadastro, edição, pesquisa e exclusão de empresa"
- name: company_address
  description: "Permite o cadastro, edição, pesquisa e exclusão do endereço da empresa"
- name: company_contact
  description: "Permite o cadastro, edição, pesquisa e exclusão dos contatos da empresa"
- name: plan
  description: "Permite o cadastro, edição, pesquisa e exclusão dos planos."
- name: role
  description: "Permite o cadastro, edição, pesquisa e exclusão das Roles."
  
- name: userRole
  description: "Permite o cadastro, edição, pesquisa e exclusão das Roles do Usuario."
  
paths:
  /api/v1/user:
    put:
      tags:
      - user
      summary: "Permite a edição de informações aos usuarios do sistema role:[ADM\
        \ | USER]"
      description: Isso só pode ser feito com o Usuario Conectado
      operationId: updateUser
      requestBody:
        content:
          application/json:
            schema:
              allOf:
              - $ref: '#/components/schemas/NewUser'
              properties:
                password:
                  type: string
             
        required: true
      responses:
        "200":
          description: Sucesso!
          content:
            application/json:
              schema:
                properties:
                  user:
                    type: object
                    allOf:
                      - $ref: '#/components/schemas/NewUser'
                 
        "400":
          description: Usuário já existe!
        "406":
          description: Usuario Não Encontrado!
      security:
      - bearerAuth: []
      x-swagger-router-controller: User
      
    post:
      tags:
      - user
      summary: "Permite o cadastro de Usuarios no sistema apartir do nome, email,\
        \ senha, endereço e telefone | role:[ADM | USER]"
      description: Criação de um novo Usuario
      operationId: createUser
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NewUserAll'
        required: true
      responses:
        "201":
          description: Sucesso!
          content:
            application/json:
              schema:
                properties:
                  user:
                    type: object
                    allOf:
                      - $ref: '#/components/schemas/NewUser'
                    properties:
                      phoneNumber:
                        type: string
                      role:
                        type: array
                        items:
                          type: string
                          
                          
        "400":
          description: Usuario já Existe!
      x-swagger-router-controller: User
      
  /api/v1/auth:
    post:
      tags:
      - user
      summary: "Permite o login do Usuario no sistema apartir do email e senha role:[ADM\
        \ | USER]"
      description: Login Responder paramentros requisição
      operationId: loginUser
      requestBody:
        content:
          application/json:
            schema:
              properties:
                email:
                  type: string
                password:
                  type: string
                  format: uuid
        required: true
      responses:
        "200":
          description: Sucesso!
          content:
            application/json:
              schema:
                properties:
                  token:
                    type: string
        "406":
          description: Nenhum Usuario Encontrado!
      x-swagger-router-controller: User
  /api/v1/showUsers:
    get:
      tags:
      - user
      summary: "Permite o acesso a lista de usuarios do Sistema | role:[ADM]"
      description: "Passa nada Paramentro, retona"
      operationId: listUser
      responses:
        "200":
          description: Sucesso!
          content:
            application/json:
              schema:
                properties:
                  user:
                    type: array
                    items:
                      allOf:
                       - $ref: '#/components/schemas/NewUser'
                      properties:
                        phoneNumber:
                          type: array
                          items:
                            type: string
                        rota:
                          type: array
                          items:
                            type: string
                    
                x-content-type: application/json
        "406":
          description: Nenhum Usuario Encontrado!
      security:
      - bearerAuth: []
      x-swagger-router-controller: User
      
  /api/v1/userAddress{userID}:
    get:
      tags:
      - user
      summary: "Permite a pesquisa, a partir do ID do usuario, das informações do\
        \ endereço  | role:[ADM | USER]"
      description: Isso só pode ser feito com o Usuario Conectado do tipo ADM
      operationId: apiV1AddressuserIDGET
      parameters:
      - name: userID
        in: path
        description: O ID do usuario em que deseja pesquisar o endereço
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: uuid
      responses:
        "200":
          description: Sucesso!
          content:
            application/json:
              schema:
                properties:
                  userAddress:
                    type: array
                    items:
                      allOf:
                       - $ref: '#/components/schemas/NewUserAddress'
                x-content-type: application/json
        "406":
          description: Nenhum Endereço Encontrado!
      security:
      - bearerAuth: []
      x-swagger-router-controller: User
      
  /api/v1/userAll{userID}:
    get:
      tags:
      - user
      summary: "Permite a pesquisa, a partir do ID do usuario, de todas as informações do usuario, como por exemplo: Suas informações pessoais, endereço, telefone e empresa cadastrada  | role:[ADM | USER]"
      description: Isso só pode ser feito com o Usuario Conectado do tipo ADM ou User
      operationId: userAllID
      parameters:
      - name: userID
        in: path
        description: O ID do usuario em que deseja pesquisar todas as informações
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: uuid
      responses:
        "200":
          description: Sucesso!
          content:
            application/json:
              schema:
                  properties:
                    User:
                      type: object
                      allOf:
                       - $ref: '#/components/schemas/user'  
                      properties:
                        address:
                          type: object
                          allOf:
                           - $ref: '#/components/schemas/NewUserAddress'
                    phone:
                      type: array
                      items:
                       $ref: '#/components/schemas/NewPhone'
                    Company:
                      type: array
                      items:
                        allOf:
                         - $ref: '#/components/schemas/NewCompany'
                        properties:
                          companyAddress:
                            type: object
                            allOf:
                            - $ref: '#/components/schemas/NewCompany_Address'
                          contact:
                            type: object
                            allOf:
                             - $ref: '#/components/schemas/NewCompany_Contact'
              
                      x-content-type: application/json
        "406":
          description: Nenhum Endereço Encontrado!
      security:
      - bearerAuth: []
      x-swagger-router-controller: User
      
      
      
  /api/v1/userPhone{userID}:
    get:
      tags:
      - user
      summary: "Permite a pesquisa, a partir do ID do usuario, do telefone  | role:[ADM\
        \ | USER]"
      description: Isso só pode ser feito com o Usuario
      operationId: apiV1PhoneuserIDGET
      parameters:
      - name: userID
        in: path
        description: O ID do telefone que deseja pesquisar
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: uuid
      responses:
        "200":
          description: Sucesso!
          content:
            application/json:
              schema:
                properties:
                  userPhone:
                    type: array
                    items:
                      allOf:
                       - $ref: '#/components/schemas/NewPhone'
                x-content-type: application/json
        "406":
          description: Nenhum Usuario Encontrado!
      security:
      - bearerAuth: []
      x-swagger-router-controller: User
  /api/v1/user/{id}:
    delete:
      tags:
      - user
      summary: "Permite a Exclusão do usuario a partir do id role:[ADM | USER]"
      description: Isso só pode ser feito com o Usuario Conectado
      operationId: deleteUser
      parameters:
      - name: id
        in: path
        description: O ID que precisa ser excluído
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: uuid
      responses:
        "200":
          description: Sucesso!
        "406":
          description: Nenhum Usuario Encontrado!
      security:
      - bearerAuth: []
      x-swagger-router-controller: User
  /api/v1/address:
    put:
      tags:
      - userAddress
      summary: "Permite a edição de informações do endereço aos usuarios do sistema\
        \ | role:[ADM | USER]"
      description: Isso só pode ser feito com o Usuario Conectado
      operationId: apiV1AddressPUT
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NewUserAddress'
        required: true
      responses:
        "200":
          description: Sucesso!
          content:
            application/json:
              schema:
                properties:
                  address:
                    allOf:
                    - $ref: '#/components/schemas/NewUserAddress'
        "400":
          description: endereço já existe!
        "406":
          description: endereço Não Encontrado!
      security:
      - bearerAuth: []
      x-swagger-router-controller: Address
    post:
      tags:
      - userAddress
      summary: "Permite o cadastro de endereço no sistema a partir dos dados, rua,\
        \ numero,cidade,cep,complemento, bairro e ponto de referencia. | role:[ADM\
        \ | USER]"
      description: Criação de um novo endereço no sistema
      operationId: apiV1AddressPOST
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/userAddress'
      responses:
        "201":
          description: Sucesso!
          content:
            application/json:
              schema:
                properties:
                  address:
                    allOf:
                    - $ref: '#/components/schemas/NewUserAddress'
        "400":
          description: Usuario já Existe!
      security:
      - bearerAuth: []
      x-swagger-router-controller: Address
  /api/v1/userCompany{userID}:
    get:
      tags:
      - user
      summary: "Permite a pesquisa, a partir do ID do usuario, as informaçoes da empresa relacionada a ele  |\
        \ role:[ADM | USER]"
      description: Isso só pode ser feito com o Usuario
      operationId: userCompanyID
      parameters:
      - name: userID
        in: path
        description: O ID do do Usuario em a empresa pertence
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: uuid
      responses:
        "200":
          description: Sucesso!
          content:
            application/json:
              schema:
                properties:
                  Company:
                    type: array
                    items:
                      allOf:
                       - $ref: '#/components/schemas/NewCompany'
                      properties:
                        companyAddress:
                          type: object
                          allOf:
                          - $ref: '#/components/schemas/NewCompany_Address'
                        contact:
                          type: object
                          allOf:
                           - $ref: '#/components/schemas/NewCompany_Contact'
                x-content-type: application/json
        "406":
          description: Nenhum Endereço Encontrado!
      security:
      - bearerAuth: []
      x-swagger-router-controller: User
  /api/v1/showAddresses:
    get:
      tags:
      - userAddress
      summary: "Permite o acesso a lista de usuarios do Sistema | role:[ADM]"
      description: Lista de Endereço
      operationId: apiV1ShowAddressesGET
      responses:
        "200":
          description: Sucesso!
          content:
            application/json:
              schema:
                properties:
                  addresses:
                    type: array
                    items:
                      $ref: '#/components/schemas/NewUserAddress'
                x-content-type: application/json
        "406":
          description: Nenhum Usuario Encontrado!
      security:
      - bearerAuth: []
      x-swagger-router-controller: Address
  /api/v1/address{id}:
    get:
      tags:
      - userAddress
      summary: "Permite a pesquisa, a partir do ID, das informações do endereço  |\
        \ role:[ADM | USER]"
      description: Isso só pode ser feito com o Usuario
      operationId: apiV1AddressidGET
      parameters:
      - name: id
        in: path
        description: O ID do endereço que deseja pesquisar
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: uuid
      responses:
        "200":
          description: Sucesso!
          content:
            application/json:
              schema:
                properties:
                  address:
                    type: object
                    allOf:
                      - $ref: '#/components/schemas/NewUserAddress'
                x-content-type: application/json
        "406":
          description: Nenhum Endereço Encontrado!
      security:
      - bearerAuth: []
      x-swagger-router-controller: User
    


  /api/v1/address/{id}:
    delete:
      tags:
      - userAddress
      summary: "Permite a Exclusão do endereço a partir do id | role:[ADM | USER]"
      description: Isso só pode ser feito com o Usuario Conectado
      operationId: deleteAddress
      parameters:
      - name: id
        in: path
        description: O ID que precisa ser excluído
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: uuid
      responses:
        "200":
          description: Sucesso!
        "406":
          description: Nenhum Usuario Encontrado!
      security:
      - bearerAuth: []
      x-swagger-router-controller: Address
  /api/v1/phone:
    put:
      tags:
      - phone
      summary: "Permite a edição de informações do telefone aos usuarios do sistema\
        \ | role:[ADM | USER]"
      description: Isso só pode ser feito com o Usuario Conectado
      operationId: apiV1PhonePUT
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NewPhone'
        required: true
      responses:
        "200":
          description: Sucesso!
          content:
            application/json:
              schema:
                properties:
                  phone:
                    type: object
                    allOf:
                    - $ref: '#/components/schemas/NewPhone'
        "400":
          description: endereço já existe!
        "406":
          description: endereço Não Encontrado!
      security:
      - bearerAuth: []
      x-swagger-router-controller: Phone
    post:
      tags:
      - phone
      summary: "Permite o cadastro de telefones no sistema apartir do numero | role:[ADM\
        \ | USER]"
      description: Criação de um novo Telefone
      operationId: createPhone
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/phone'
        required: true
      responses:
        "201":
          description: Sucesso!
          content:
            application/json:
              schema:
                properties:
                  phone:
                    type: object
                    allOf:
                    - $ref: '#/components/schemas/NewPhone'
        "400":
          description: Usuario já Existe!
      security:
      - bearerAuth: []
      x-swagger-router-controller: Phone
  /api/v1/showPhones:
    get:
      tags:
      - phone
      summary: "Permite o acesso a lista de telefones do Sistema | role:[ADM]"
      description: Lista de telefones
      operationId: apiV1ShowPhonesGET
      responses:
        "200":
          description: Sucesso!
          content:
            application/json:
              schema:
                properties:
                  phone:
                    type: array
                    items:
                      $ref: '#/components/schemas/NewPhone'
                    x-content-type: application/json
        "406":
          description: Nenhum Usuario Encontrado!
      security:
      - bearerAuth: []
      x-swagger-router-controller: Phone
  /api/v1/phone{id}:
    get:
      tags:
      - phone
      summary: "Permite a pesquisa, a partir do ID, do telefone  | role:[ADM | USER]"
      description: Isso só pode ser feito com o Usuario
      operationId: apiV1PhoneidGET
      parameters:
      - name: id
        in: path
        description: O ID do telefone que deseja pesquisar
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: uuid
      responses:
        "200":
          description: Sucesso!
          content:
            application/json:
              schema:
                properties:
                  phone:
                    type: object
                    allOf:
                    - $ref: '#/components/schemas/NewPhone'
                x-content-type: application/json
        "406":
          description: Nenhum telefone Encontrado!
      security:
      - bearerAuth: []
      x-swagger-router-controller: Phone

  /api/v1/phone/{id}:
    delete:
      tags:
      - phone
      summary: "Permite a Exclusão o telefone a partir do id | role:[ADM | USER]"
      description: Isso só pode ser feito com o Usuario Conectado
      operationId: deletePhone
      parameters:
      - name: id
        in: path
        description: O ID que precisa ser excluído
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: uuid
      responses:
        "200":
          description: Sucesso!
        "406":
          description: Nenhum telefone Encontrado!
      security:
      - bearerAuth: []
      x-swagger-router-controller: Phone
  /api/v1/company:
    put:
      tags:
      - company
      summary: "Permite a edição de informações relacionadas a empresa ao ADM do sistema\
        \ role:[ADM]"
      description: Isso só pode ser feito com o Usuario Conectado
      operationId: updateCompany
      requestBody:
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/NewCompany'
              properties:
                email:
                  type: string
                phone:
                  type: string
        required: true
      responses:
        "200":
          description: Sucesso!
          content:
            application/json:
              schema:
                properties:
                  company:
                    type: object
                    allOf:
                    - $ref: '#/components/schemas/NewCompany'
                    properties:
                      contact:
                        type: object
                        allOf:
                        - $ref: '#/components/schemas/NewCompany_Contact'
        "400":
          description: Usuário já existe!
        "406":
          description: Usuario Não Encontrado!
      security:
      - bearerAuth: []
      x-swagger-router-controller: Company
      
    post:
      tags:
      - company
      summary: "Permite o cadastro de empresa no sistema apartir do nome, cnpj, IE,\
        \ endereço e contato | role:[ADM]"
      description: Criação de um novo Usuario empresa no sistema
      operationId: createCompany
      requestBody:
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/company'
              properties:
                email:
                  type: string

                phone:
                  type: string
        required: true
      responses:
        "201":
          description: Sucesso!
          content:
            application/json:
              schema:
                properties:
                  company:
                    type: object
                    allOf:
                    - $ref: '#/components/schemas/NewCompany'
                    properties:
                      contact:
                        type: object
                        allOf:
                        - $ref: '#/components/schemas/NewCompany_Contact'
        "400":
          description: Empresa Cadastrada!
      security:
      - bearerAuth: []
      x-swagger-router-controller: Company
  /api/v1/company/{companyID}:
    delete:
      tags:
      - company
      summary: "Permite a Exclusão da empresa a partir do id | role:[ADM]"
      description: Isso só pode ser feito com o Usuario Conectado
      operationId: deleteCompany
      parameters:
      - name: companyID
        in: path
        description: O ID que precisa ser excluído
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: uuid
      responses:
        "200":
          description: Sucesso!
        "406":
          description: Nenhum telefone Encontrado!
      security:
      - bearerAuth: []
      x-swagger-router-controller: Company
  /api/v1/company{companyID}:
    get:
      tags:
      - company
      summary: "Permite a pesquisa da Empresa, a partir do ID | role:[ADM]"
      description: Isso só pode ser feito com o Usuario
      operationId: apiV1CompanycompanyIDGET
      parameters:
      - name: companyID
        in: path
        description: O ID do telefone que deseja pesquisar
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: uuid
      responses:
        "200":
          description: Sucesso!
          content:
            application/json:
              schema:
                properties:
                  Company:
                    type: object
                    allOf:
                     - $ref: '#/components/schemas/NewCompany'
                x-content-type: application/json
        "406":
          description: Nenhum empresa Encontrado!
      security:
      - bearerAuth: []
      x-swagger-router-controller: Company

  /api/v1/companyAll{companyID}:
    get:
      tags:
      - company
      summary: "Permite a pesquisa de todas as informações da Empresa, a partir do ID | role:[ADM]"
      description: Isso só pode ser feito com o Usuario
      operationId: companyAllID
      parameters:
      - name: companyID
        in: path
        description: O ID do telefone que deseja pesquisar
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: uuid
      responses:
        "200":
          description: Sucesso!
          content:
            application/json:
              schema:
                  properties:
                    company:
                      type: object
                      allOf:
                       - $ref: '#/components/schemas/NewCompany' 
                      properties:
                        address:
                          type: object
                          allOf:
                          - $ref: '#/components/schemas/NewCompany_Address'
                    contact:
                      type: object
                      allOf:
                       - $ref: '#/components/schemas/NewCompany_Contact'
                        
                 
                    
                  x-content-type: application/json
        "406":
          description: Nenhum empresa Encontrado!
      security:
      - bearerAuth: []
      x-swagger-router-controller: Company   
      
  /api/v1/companyAddress{companyID}:
    get:
      tags:
      - company
      summary: "Permite a pesquisa, a partir do ID  da empresa, do endereço  | role:[ADM]"
      description: Isso só pode ser feito com o Usuario
      operationId: apiV1CompanyAddresscompanyIDGET
      parameters:
      - name: companyID
        in: path
        description: O ID da empresa em que pertence o id
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: uuid
      responses:
        "200":
          description: Sucesso!
          content:
            application/json:
              schema:
               properties:
                CompanyAddress:
                  type: object
                  allOf:
                    - $ref: '#/components/schemas/NewCompany_Address'
                  x-content-type: application/json
        "406":
          description: Nenhum Usuario Encontrado!
      security:
      - bearerAuth: []
      x-swagger-router-controller: CompanyAddress
  /api/v1/showCompanies:
    get:
      tags:
      - company
      summary: "Permite o acesso a lista de empresas do Sistema | role:[ADM]"
      description: "Passa nada Paramentro, retona"
      operationId: listCompany
      responses:
        "200":
          description: Sucesso!
          content:
            application/json:
              schema:
                properties:
                 Companies: 
                  type: array
                  items:
                    $ref: '#/components/schemas/NewCompany'
                x-content-type: application/json
        "406":
          description: Nenhum Usuario Encontrado!
      security:
      - bearerAuth: []
      x-swagger-router-controller: Company
  /api/v1/companyAddress:
    put:
      tags:
      - company_address
      summary: "Permite a edição de informações relacionadas ao endereço da empresa,\
        \ ao ADM do sistema role:[ADM]"
      description: Isso só pode ser feito com o Usuario Conectado
      operationId: updatecompany_address
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NewCompany_Address'
        required: true
      responses:
        "200":
          description: Sucesso!
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NewCompany_Address'
        "400":
          description: Usuário já existe!
        "406":
          description: Usuario Não Encontrado!
      security:
      - bearerAuth: []
      x-swagger-router-controller: CompanyAddress
    post:
      tags:
      - company_address
      summary: "Permite o cadastro de endereço no sistema a partir dos dados, rua,\
        \ numero,cidade,cep,complemento, bairro e ponto de referencia| role:[ADM ]"
      description: Criação de um novo enderço da empresa no sistema
      operationId: createCompanyAddress
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NewCompany_Address'
        required: true
      responses:
        "201":
          description: Sucesso!
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NewCompany_Address'
        "400":
          description: Empresa Cadastrada!
      security:
      - bearerAuth: []
      x-swagger-router-controller: CompanyAddress
  /api/v1/companyAddress/{companyAddressID}:
    delete:
      tags:
      - company_address
      summary: "Permite a Exclusão do endereço da empresa a partir do id | role:[ADM]"
      description: Isso só pode ser feito com o Usuario Conectado
      operationId: deleteCompany_address
      parameters:
      - name: companyAddressID
        in: path
        description: O ID que precisa ser excluído
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: uuid
      responses:
        "200":
          description: Sucesso!
        "406":
          description: Nenhum telefone Encontrado!
      security:
      - bearerAuth: []
      x-swagger-router-controller: CompanyAddress
  /api/v1/companyAddress{companyAddressID}:
    get:
      tags:
      - company_address
      summary: "Permite a pesquisa, a partir do ID do endereço da empresa, do endereç\
        o  | role:[ADM]"
      description: Isso só pode ser feito com o Usuario
      operationId: apiV1CompanyAddresscompanyAddressIDGET
      parameters:
      - name: companyAddressID
        in: path
        description: O ID do telefone que deseja pesquisar
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: uuid
      responses:
        "200":
          description: Sucesso!
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/NewCompany_Address'
                x-content-type: application/json
        "406":
          description: Nenhum Usuario Encontrado!
      security:
      - bearerAuth: []
      x-swagger-router-controller: CompanyAddress

  /api/v1/showCompanyAddress:
    get:
      tags:
      - company_address
      summary: "Permite o acesso a lista de endereço das empresas do Sistema | role:[ADM]"
      description: "Passa nada Paramentro, retona"
      operationId: listCompanyAddress
      responses:
        "200":
          description: Sucesso!
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/NewCompany_Address'
                x-content-type: application/json
        "406":
          description: Nenhum endereço Encontrado!
      security:
      - bearerAuth: []
      x-swagger-router-controller: CompanyAddress
  /api/v1/companyContact{companyID}:
    get:
      tags:
      - company
      summary: "Permite a pesquisa, a partir do ID da empresa, os contatos  | role:[ADM]"
      description: Isso só pode ser feito com o Usuario
      operationId: apiV1CompanyContactcompanyAddressIDGET
      parameters:
      - name: companyID
        in: path
        description: O ID da empresa em  que o contato pertence
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: uuid
      responses:
        "200":
          description: Sucesso!
          content:
            application/json:
              schema:
                properties:
                  CompanyContact:
                    type: object
                    allOf:
                    - $ref: '#/components/schemas/NewCompany_Contact'
                x-content-type: application/json
        "406":
          description: Nenhum Contato Encontrado!
      security:
      - bearerAuth: []
      x-swagger-router-controller: company
  /api/v1/companyContact:
    put:
      tags:
      - company_contact
      summary: "Permite a edição de informações relacionadas aos contatos da empresa,\
        \ ao ADM do sistema role:[ADM]"
      description: Isso só pode ser feito com o Usuario Conectado
      operationId: updatecompany_contact
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NewCompany_Contact'
        required: true
      responses:
        "200":
          description: Sucesso!
          content:
            application/json:
              schema:
                properties:
                  CompanyContact:
                    type: object
                    allOf:
                    - $ref: '#/components/schemas/NewCompany_Contact'
        "400":
          description: Usuário já existe!
        "406":
          description: Usuario Não Encontrado!
      security:
      - bearerAuth: []
      x-swagger-router-controller: CompanyContact
    post:
      tags:
      - company_contact
      summary: "Permite o cadastro dos contatos da empresa no sistema a partir dos\
        \ dados, email e telefone| role:[ADM ]"
      description: Criação de um novo enderço da empresa no sistema
      operationId: createCompanyContact
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Company_Contact'
        required: true
      responses:
        "201":
          description: Sucesso!
          content:
            application/json:
              schema:
                properties:
                  CompanyContact:
                    type: object
                    allOf:
                    - $ref: '#/components/schemas/NewCompany_Contact'
        "400":
          description: Empresa Cadastrada!
      security:
      - bearerAuth: []
      x-swagger-router-controller: CompanyContact
      
  /api/v1/companyContact/{companyContactID}:
    delete:
      tags:
      - company_contact
      summary: "Permite a Exclusão do contato da empresa a partir do id | role:[ADM]"
      description: Isso só pode ser feito com o Usuario Conectado
      operationId: deleteCompany_contact
      parameters:
      - name: companyContactID
        in: path
        description: O ID que precisa ser excluído
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: uuid
      responses:
        "200":
          description: Sucesso!
        "406":
          description: Nenhum telefone Encontrado!
      security:
      - bearerAuth: []
      x-swagger-router-controller: CompanyContact
      
  /api/v1/companyContact{companyContactID}:
    get:
      tags:
      - company_contact
      summary: "Permite a pesquisa dos contados a partir do id  | role:[ADM ]"
      description: Isso só pode ser feito com o Usuario
      operationId: apiV1CompanyContactcompanyContactIDGET
      parameters:
      - name: companyContactID
        in: path
        description: O ID do telefone que deseja pesquisar
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: uuid
      responses:
        "200":
          description: Sucesso!
          content:
            application/json:
              schema:
                properties:
                  CompanyContact:
                    type: object
                    allOf:
                    - $ref: '#/components/schemas/NewCompany_Contact'
                x-content-type: application/json
        "406":
          description: Nenhum Usuario Encontrado!
      security:
      - bearerAuth: []
      x-swagger-router-controller: CompanyContact

  /api/v1/showCompaniesContacts:
    get:
      tags:
      - company_contact
      summary: "Permite o acesso a lista dos contatos das empresas do Sistema | role:[ADM]"
      description: "Passa nada Paramentro, retona"
      operationId: listCompany_contact
      responses:
        "200":
          description: Sucesso!
          content:
            application/json:
              schema:
                properties:
                  CompaniesContacts:
                    type: array
                    items:
                     $ref: '#/components/schemas/NewCompany_Contact'
                x-content-type: application/json
        "406":
          description: Nenhum endereço Encontrado!
      security:
      - bearerAuth: []
      x-swagger-router-controller: CompanyContact
      
  /api/v1/plan:
    put:
      tags:
      - plan
      summary: "Permite a edição das informaçoes dos planos ao ADM do sistema role:[ADM]"
      description: Isso só pode ser feito com o Usuario Conectado
      operationId: updatePlan
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NewPlan'
        required: true
      responses:
        "200":
          description: Sucesso!
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NewPlan'
        "400":
          description: Usuário já existe!
        "406":
          description: Usuario Não Encontrado!
      security:
      - bearerAuth: []
      x-swagger-router-controller: Plan
    post:
      tags:
      - plan
      summary: "Permite o cadastro de planos no sistema a partir dos dados, descriç\
        ão, preço e nome| role:[ADM ]"
      description: Criação de um novo enderço da empresa no sistema
      operationId: createPlan
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NewPlan'
        required: true
      responses:
        "201":
          description: Sucesso!
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NewPlan'
        "400":
          description: Empresa Cadastrada!
      security:
      - bearerAuth: []
      x-swagger-router-controller: Plan
  /api/v1/showPlans:
    get:
      tags:
      - plan
      summary: "Permite o acesso a lista de planos | role:[ADM]"
      description: "Passa nada Paramentro, retona"
      operationId: listPlan
      responses:
        "200":
          description: Sucesso!
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/NewPlan'
                x-content-type: application/json
        "406":
          description: Nenhum endereço Encontrado!
      security:
      - bearerAuth: []
      x-swagger-router-controller: Plan
  '/api/v1/plan/{planID}':
    get:
      tags:
      - plan
      summary: "Permite a pesquisa, a partir do ID , do planos  | role:[ADM]"
      description: Isso só pode ser feito com o Usuario
      operationId: apiV1PlanplanIDGET
      parameters:
      - name: planID
        in: path
        description: O ID da empresa em  que o contato pertence
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: uuid
      responses:
        "200":
          description: Sucesso!
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/NewPlan'
                x-content-type: application/json
        "406":
          description: Nenhum Usuario Encontrado!
      security:
      - bearerAuth: []
      x-swagger-router-controller: Plan
  
    delete:
      tags:
      - plan
      summary: "Permite a Exclusão do plano a partir do id | role:[ADM]"
      description: Isso só pode ser feito com o Usuario Conectado
      operationId: deletePlan
      parameters:
      - name: planID
        in: path
        description: O ID que precisa ser excluído
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: uuid
      responses:
        "200":
          description: Sucesso!
        "406":
          description: Nenhum telefone Encontrado!
      security:
      - bearerAuth: []
      x-swagger-router-controller: Plan




  /api/v1/role:
    put:
      tags:
      - role
      summary: "Permite a edição das roles ao ADM do sistema role:[ADM]"
      description: Isso só pode ser feito com o Usuario Conectado
      operationId: updateRole
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/role'
        required: true
      responses:
        "200":
          description: Sucesso!
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/role'
        "400":
          description: Role já existe!
        "406":
          description: Role Não Encontrado!
      security:
      - bearerAuth: []
      x-swagger-router-controller: Plan
      
    post:
      tags:
      - role
      summary: "Permite a criação de roles no sistema | role:[ADM ]"
      description: Criação de um nova Role no sistema
      operationId: createRole
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NewRole'
        required: true
      responses:
        "201":
          description: Sucesso!
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NewRole'
        "400":
          description: Role já existe!
      security:
      - bearerAuth: []
      x-swagger-router-controller: role
      
  /api/v1/showRoles:
    get:
      tags:
      - role
      summary: "Permite o acesso a lista de roles | role:[ADM]"
      description: "Passa nada Paramentro, retona"
      operationId: listRole
      responses:
        "200":
          description: Sucesso!
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/NewRole'
                x-content-type: application/json
        "406":
          description: Nenhum Role Encontrado!
      security:
      - bearerAuth: []
      x-swagger-router-controller: Plan
      
  '/api/v1/role/{roleID}':
    get:
      tags:
      - role
      summary: "Permite a pesquisa, a partir do ID , das roles  | role:[ADM]"
      description: Isso só pode ser feito com o Usuario conectado
      operationId: pesquisaRoleID
      parameters:
      - name: roleID
        in: path
        description: O ID da role 
        required: true
        schema:
          type: string
          format: uuid
      responses:
        "200":
          description: Sucesso!
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/role'
                x-content-type: application/json
        "406":
          description: Nenhum role Encontrado!
      security:
      - bearerAuth: []
      x-swagger-router-controller: Plan
      
    delete:
      tags:
      - role
      summary: "Permite a Exclusão de roles a partir do id | role:[ADM]"
      description: Isso só pode ser feito com o Usuario Conectado
      operationId: deleteRole
      parameters:
      - name: roleID
        in: path
        description: O ID que precisa ser excluído
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: uuid
      responses:
        "200":
          description: Sucesso!
        "406":
          description: Nenhum Role Encontrado!
      security:
      - bearerAuth: []
      x-swagger-router-controller: role
      
      
      
      
      

  /api/v1/userRole:
    put:
      tags:
      - userRole
      summary: "Permite a edição das roles ao ADM do sistema role:[ADM]"
      description: Isso só pode ser feito com o Usuario Conectado
      operationId: updateUserRole
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/userRole'
        required: true
      responses:
        "200":
          description: Sucesso!
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/userRole'
        "400":
          description: Role já existe!
        "406":
          description: Role Não Encontrado!
      security:
      - bearerAuth: []
      x-swagger-router-controller: Plan
      
    post:
      tags:
      - userRole
      summary: "Permite a criação de roles no sistema | role:[ADM ]"
      description: Criação de um nova Role no sistema
      operationId: createUserRole
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NewRole'
        required: true
      responses:
        "201":
          description: Sucesso!
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NewRole'
        "400":
          description: Role já existe!
      security:
      - bearerAuth: []
      x-swagger-router-controller: role
      
  /api/v1/showUserRoles:
    get:
      tags:
      - userRole
      summary: "Permite o acesso a lista de roles | role:[ADM]"
      description: "Passa nada Paramentro, retona"
      operationId: listUserRole
      responses:
        "200":
          description: Sucesso!
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/NewRole'
                x-content-type: application/json
        "406":
          description: Nenhum Role Encontrado!
      security:
      - bearerAuth: []
      x-swagger-router-controller: Plan
      
  '/api/v1/userRole/{userRoleID}':
    get:
      tags:
      - userRole
      summary: "Permite a pesquisa, a partir do ID , das roles  | role:[ADM]"
      description: Isso só pode ser feito com o Usuario conectado
      operationId: pesquisaUserRoleID
      parameters:
      - name: userRoleID
        in: path
        description: O ID da role 
        required: true
        schema:
          type: string
          format: uuid
      responses:
        "200":
          description: Sucesso!
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/role'
                x-content-type: application/json
        "406":
          description: Nenhum role Encontrado!
      security:
      - bearerAuth: []
      x-swagger-router-controller: Plan
      
    delete:
      tags:
      - userRole
      summary: "Permite a Exclusão de roles a partir do id | role:[ADM]"
      description: Isso só pode ser feito com o Usuario Conectado
      operationId: deleteUserRole
      parameters:
      - name: userRoleID
        in: path
        description: O ID que precisa ser excluído
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: uuid
      responses:
        "200":
          description: Sucesso!
        "406":
          description: Nenhum Role Encontrado!
      security:
      - bearerAuth: []
      x-swagger-router-controller: role
      
      
components:
  schemas:
    user:
      type: object
      allOf:
      - $ref: '#/components/schemas/NewUserAll'
      - required:
        - userID
        properties:
          userID:
            type: string
            format: uuid
            
    NewUser:
      required:
      - userID
      - email
      - name
      properties:
        email:
          type: string
        name:
          type: string
        userID:
          type: string
          format: uuid

          
    NewUserAll:
      required:
      - email
      - name
      - password
      - phoneNumber
      properties:
        email:
          type: string
        password:
          type: string
        name:
          type: string
        phoneNumber:
          type: string
        

    phone:
      required:
      - userID
      - phoneNumber
      type: object
      properties:
        userID:
          type: string
          format: uuid
        phoneNumber:
          type: string
      
    NewPhone:
      required:
      - phoneNumber
      - phoneID
      properties:
        phoneNumber:
          type: string
        phoneID:
          type: string
          format: uuid
        
    userAddress:
      required:
      - userID
      - bairro
      - cep
      - city
      - number
      - state
      - street
      - referencePoint
      - houseNumber
      type: object
      properties:
        userID:
          type: string
          format: uuid
        city:
          type: string
        street:
          type: string
        bairro:
          type: string
        houseNumber:
          type: string
        state:
          type: string
        cep:
          type: string
        referencePoint:
          type: string
        complement:
          type: string
      
      
    NewUserAddress:
      required:
      - bairro
      - cep
      - city
      - number
      - state
      - street
      - referencePoint
      - houseNumber
      - addressID
      properties:
        city:
          type: string
        street:
          type: string
        bairro:
          type: string
        houseNumber:
          type: string
        state:
          type: string
        cep:
          type: string
        referencePoint:
          type: string
        complement:
          type: string
        addressID:
          type: string
          format: uuid


        
        
    company:
      required:
      - userID
      - IE
      - address
      - cnpj
      - companyName
      type: object
      properties:
        userID:
          type: string
          format: uuid
        companyName:
          type: string
        cnpj:
          type: string
        IE:
          type: string
      
      
    NewCompany:
      required:
      - IE
      - address
      - cnpj
      - companyName
      - companyID
      properties:
        companyName:
          type: string
        cnpj:
          type: string
        IE:
          type: string
        companyID:
          type: string
          format: uuid
        
    Company_Contact:
      required:
      - email
      - number      
      - companyID
      type: object
      properties:
        companyID:
          type: string
          format: uuid
        number:
          type: string
        email:
          type: string

      
    NewCompany_Contact:
      required:
      - email
      - number
      - contactID
      properties:
        number:
          type: string
        email:
          type: string
        contactID:
          type: string
          format: uuid

        
    Company_address:
      required:
      - companyID
      type: object
      properties:
        companyID:
          type: string
          format: uuid
      allOf:
      - $ref: '#/components/schemas/NewCompany_Address'
      
    NewCompany_Address:
      required:
      - bairro
      - cep
      - city
      - number
      - state
      - street
      - companyAddressID
      properties:
        city:
          type: string
        street:
          type: string
        bairro:
          type: string
        houseNumber:
          type: string
        state:
          type: string
        cep:
          type: string
        referencePoint:
          type: string
        complement:
          type: string
        companyAddressID:
          type: string
          format: uuid

    plan:
      required:
      - companyID
      - planID
      properties:
        planID:
          type: string
      allOf:
      - $ref: '#/components/schemas/NewPlan'
      
    NewPlan:
      required:
      - description
      - name
      - value
      properties:
        name:
          type: string
        description:
          type: string
        value:
          type: number
    role:
      required: 
      - tipo
      - id
      properties:
        id:
          type: string
          format: uuid
      allOf:
        - $ref: '#/components/schemas/NewRole'
          
    NewRole:
      required: 
      - tipo
      properties:
        tipo:
          type: string
          
          
          
    userRole:
      required: 
      - ID
      properties:
        ID:
          type: string
          format: uuid
      allOf:
        - $ref: '#/components/schemas/NewUserRole'
          
    NewUserRole:
      required: 
      - userID
      - roleID
      properties:
        userID:
          type: string
          format: uuid
        roleID:
          type: string
          format: uuid
          
  
    
          
    

  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
