openapi: 3.0.1
info:
  title: EduCare API
  description: 'Esta API permite a Integração de seus recurso '
  termsOfService: http://localhost/terms/
  contact:
    name: Fabrica de Software
    url: http://localhost/fabricasoftware
    email: wellingtonvictoralves@hotmail.com
  license:
    name: Apache 2.0
    url: https://www.apache.org/licenses/LICENSE-2.0.html
  version: 1.0.0
servers:
- url: https://virtserver.swaggerhub.com/EduCare/EduCareAPI/1.0.0
  description: SwaggerHub API Auto Mocking
- url: http://localhost:3333
  description: EduCareAPI
- url: https://www.google.com/EduCare/EduCareAPI/1.0.0
  description: Google Server
tags:
- name: user
  description: "Operações do Usuário no Sistema, permite a criação, login, atualizaç\
    ão e pesquisa."
- name: address
  description: "Permite o cadastro, edição, pesquisa e exclusão de endereço"
- name: phone
  description: "Permite o cadastro, edição, pesquisa e exclusão de telefone"
- name: company
  description: "Permite o cadastro, edição, pesquisa e exclusão de empresa"
- name: company_address
  description: "Permite o cadastro, edição, pesquisa e exclusão do endereço da empresa"
- name: company_contact
  description: "Permite o cadastro, edição, pesquisa e exclusão dos contatos da empresa"
- name: plan
  description: "Permite o cadastro, edição, pesquisa e exclusão dos planos."
paths:
  /api/v1/user:
    put:
      tags:
      - user
      summary: "Permite a edição de informações aos usuarios do sistema role:[ADM\
        \ | USER]"
      description: Isso só pode ser feito com o Usuario Conectado
      operationId: updateUser
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NewUser'
        required: true
      responses:
        "200":
          description: Sucesso!
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NewUser'
        "400":
          description: Usuário já existe!
        "406":
          description: Usuario Não Encontrado!
      security:
      - bearerAuth: []
      x-swagger-router-controller: User
    post:
      tags:
      - user
      summary: "Permite o cadastro de Usuarios no sistema apartir do nome, email,\
        \ senha, endereço e telefone | role:[ADM | USER]"
      description: Criação de um novo Usuario
      operationId: createUser
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NewUser'
        required: true
      responses:
        "201":
          description: Sucesso!
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NewUser'
        "400":
          description: Usuario já Existe!
      x-swagger-router-controller: User
  /api/v1/auth:
    post:
      tags:
      - user
      summary: "Permite o login do Usuario no sistema apartir do email e senha role:[ADM\
        \ | USER]"
      description: Login Responder paramentros requisição
      operationId: loginUser
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NewUser'
        required: true
      responses:
        "200":
          description: Sucesso!
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NewUser'
        "406":
          description: Nenhum Usuario Encontrado!
      x-swagger-router-controller: User
  /api/v1/showUsers:
    get:
      tags:
      - user
      summary: "Permite o acesso a lista de usuarios do Sistema | role:[ADM]"
      description: "Passa nada Paramentro, retona"
      operationId: listUser
      responses:
        "200":
          description: Sucesso!
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/user'
                x-content-type: application/json
        "406":
          description: Nenhum Usuario Encontrado!
      security:
      - bearerAuth: []
      x-swagger-router-controller: User
  /api/v1/user/{id}:
    delete:
      tags:
      - user
      summary: "Permite a Exclusão do usuario a partir do id role:[ADM | USER]"
      description: Isso só pode ser feito com o Usuario Conectado
      operationId: deleteUser
      parameters:
      - name: id
        in: path
        description: O ID que precisa ser excluído
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: uuid
      responses:
        "200":
          description: Sucesso!
        "406":
          description: Nenhum Usuario Encontrado!
      security:
      - bearerAuth: []
      x-swagger-router-controller: User
  /api/v1/address:
    put:
      tags:
      - address
      summary: "Permite a edição de informações do endereço aos usuarios do sistema\
        \ | role:[ADM | USER]"
      description: Isso só pode ser feito com o Usuario Conectado
      operationId: apiV1AddressPUT
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/address'
        required: true
      responses:
        "200":
          description: Sucesso!
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/address'
        "400":
          description: endereço já existe!
        "406":
          description: endereço Não Encontrado!
      security:
      - bearerAuth: []
      x-swagger-router-controller: Address
    post:
      tags:
      - address
      summary: "Permite o cadastro de endereço no sistema a partir dos dados, rua,\
        \ numero,cidade,cep,complemento, bairro e ponto de referencia. | role:[ADM\
        \ | USER]"
      description: Criação de um novo endereço no sistema
      operationId: apiV1AddressPOST
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NewAddress'
      responses:
        "201":
          description: Sucesso!
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NewAddress'
        "400":
          description: Usuario já Existe!
      security:
      - bearerAuth: []
      x-swagger-router-controller: Address
  /api/v1/showAddresses:
    get:
      tags:
      - address
      summary: "Permite o acesso a lista de usuarios do Sistema | role:[ADM]"
      description: Lista de Endereço
      operationId: apiV1ShowAddressesGET
      responses:
        "200":
          description: Sucesso!
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/address'
                x-content-type: application/json
        "406":
          description: Nenhum Usuario Encontrado!
      security:
      - bearerAuth: []
      x-swagger-router-controller: Address
  /api/v1/address{id}:
    get:
      tags:
      - address
      summary: "Permite a pesquisa, a partir do ID, das informações do endereço  |\
        \ role:[ADM | USER]"
      description: Isso só pode ser feito com o Usuario
      operationId: apiV1AddressidGET
      parameters:
      - name: id
        in: path
        description: O ID do endereço que deseja pesquisar
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: uuid
      responses:
        "200":
          description: Sucesso!
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/address'
                x-content-type: application/json
        "406":
          description: Nenhum Usuario Encontrado!
      security:
      - bearerAuth: []
      x-swagger-router-controller: Address
  /api/v1/address{userID}:
    get:
      tags:
      - address
      summary: "Permite a pesquisa, a partir do ID do usuario, das informações do\
        \ endereço  | role:[ADM | USER]"
      description: Isso só pode ser feito com o Usuario Conectado do tipo ADM
      operationId: apiV1AddressuserIDGET
      parameters:
      - name: userID
        in: path
        description: O ID do endereço que deseja pesquisar
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: uuid
      responses:
        "200":
          description: Sucesso!
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/address'
                x-content-type: application/json
        "406":
          description: Nenhum Usuario Encontrado!
      security:
      - bearerAuth: []
      x-swagger-router-controller: Address
  /api/v1/address/{id}:
    delete:
      tags:
      - address
      summary: "Permite a Exclusão do endereço a partir do id | role:[ADM | USER]"
      description: Isso só pode ser feito com o Usuario Conectado
      operationId: deleteAddress
      parameters:
      - name: id
        in: path
        description: O ID que precisa ser excluído
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: uuid
      responses:
        "200":
          description: Sucesso!
        "406":
          description: Nenhum Usuario Encontrado!
      security:
      - bearerAuth: []
      x-swagger-router-controller: Address
  /api/v1/phone:
    put:
      tags:
      - phone
      summary: "Permite a edição de informações do telefone aos usuarios do sistema\
        \ | role:[ADM | USER]"
      description: Isso só pode ser feito com o Usuario Conectado
      operationId: apiV1PhonePUT
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NewPhone'
        required: true
      responses:
        "200":
          description: Sucesso!
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NewPhone'
        "400":
          description: endereço já existe!
        "406":
          description: endereço Não Encontrado!
      security:
      - bearerAuth: []
      x-swagger-router-controller: Phone
    post:
      tags:
      - phone
      summary: "Permite o cadastro de telefones no sistema apartir do numero | role:[ADM\
        \ | USER]"
      description: Criação de um novo Telefone
      operationId: createPhone
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NewPhone'
        required: true
      responses:
        "201":
          description: Sucesso!
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NewPhone'
        "400":
          description: Usuario já Existe!
      security:
      - bearerAuth: []
      x-swagger-router-controller: Phone
  /api/v1/showPhones:
    get:
      tags:
      - phone
      summary: "Permite o acesso a lista de telefones do Sistema | role:[ADM]"
      description: Lista de telefones
      operationId: apiV1ShowPhonesGET
      responses:
        "200":
          description: Sucesso!
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/phone'
                x-content-type: application/json
        "406":
          description: Nenhum Usuario Encontrado!
      security:
      - bearerAuth: []
      x-swagger-router-controller: Phone
  /api/v1/phone{id}:
    get:
      tags:
      - phone
      summary: "Permite a pesquisa, a partir do ID, do telefone  | role:[ADM | USER]"
      description: Isso só pode ser feito com o Usuario
      operationId: apiV1PhoneidGET
      parameters:
      - name: id
        in: path
        description: O ID do telefone que deseja pesquisar
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: uuid
      responses:
        "200":
          description: Sucesso!
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/phone'
                x-content-type: application/json
        "406":
          description: Nenhum telefone Encontrado!
      security:
      - bearerAuth: []
      x-swagger-router-controller: Phone
  /api/v1/phone{userID}:
    get:
      tags:
      - phone
      summary: "Permite a pesquisa, a partir do ID do usuario, do telefone  | role:[ADM\
        \ | USER]"
      description: Isso só pode ser feito com o Usuario
      operationId: apiV1PhoneuserIDGET
      parameters:
      - name: userID
        in: path
        description: O ID do telefone que deseja pesquisar
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: uuid
      responses:
        "200":
          description: Sucesso!
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/phone'
                x-content-type: application/json
        "406":
          description: Nenhum Usuario Encontrado!
      security:
      - bearerAuth: []
      x-swagger-router-controller: Phone
  /api/v1/phone/{id}:
    delete:
      tags:
      - phone
      summary: "Permite a Exclusão o telefone a partir do id | role:[ADM | USER]"
      description: Isso só pode ser feito com o Usuario Conectado
      operationId: deletePhone
      parameters:
      - name: id
        in: path
        description: O ID que precisa ser excluído
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: uuid
      responses:
        "200":
          description: Sucesso!
        "406":
          description: Nenhum telefone Encontrado!
      security:
      - bearerAuth: []
      x-swagger-router-controller: Phone
  /api/v1/company:
    put:
      tags:
      - company
      summary: "Permite a edição de informações relacionadas a empresa ao ADM do sistema\
        \ role:[ADM]"
      description: Isso só pode ser feito com o Usuario Conectado
      operationId: updateCompany
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NewCompany'
        required: true
      responses:
        "200":
          description: Sucesso!
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NewCompany'
        "400":
          description: Usuário já existe!
        "406":
          description: Usuario Não Encontrado!
      security:
      - bearerAuth: []
      x-swagger-router-controller: Company
    post:
      tags:
      - company
      summary: "Permite o cadastro de empresa no sistema apartir do nome, cnpj, IE,\
        \ endereço e contato | role:[ADM]"
      description: Criação de um novo Usuario empresa no sistema
      operationId: createCompany
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NewCompany'
        required: true
      responses:
        "201":
          description: Sucesso!
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NewCompany'
        "400":
          description: Empresa Cadastrada!
      security:
      - bearerAuth: []
      x-swagger-router-controller: Company
  /api/v1/company/{companyID}:
    delete:
      tags:
      - company
      summary: "Permite a Exclusão da empresa a partir do id | role:[ADM]"
      description: Isso só pode ser feito com o Usuario Conectado
      operationId: deleteCompany
      parameters:
      - name: companyID
        in: path
        description: O ID que precisa ser excluído
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: uuid
      responses:
        "200":
          description: Sucesso!
        "406":
          description: Nenhum telefone Encontrado!
      security:
      - bearerAuth: []
      x-swagger-router-controller: Company
  /api/v1/company{companyID}:
    get:
      tags:
      - company
      summary: "Permite a pesquisa da Empresa, a partir do ID | role:[ADM]"
      description: Isso só pode ser feito com o Usuario
      operationId: apiV1CompanycompanyIDGET
      parameters:
      - name: companyID
        in: path
        description: O ID do telefone que deseja pesquisar
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: uuid
      responses:
        "200":
          description: Sucesso!
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/company'
                x-content-type: application/json
        "406":
          description: Nenhum telefone Encontrado!
      security:
      - bearerAuth: []
      x-swagger-router-controller: Company
  /api/v1/showCompany:
    get:
      tags:
      - company
      summary: "Permite o acesso a lista de empresas do Sistema | role:[ADM]"
      description: "Passa nada Paramentro, retona"
      operationId: listCompany
      responses:
        "200":
          description: Sucesso!
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/user'
                x-content-type: application/json
        "406":
          description: Nenhum Usuario Encontrado!
      security:
      - bearerAuth: []
      x-swagger-router-controller: Company
  /api/v1/companyAddress:
    put:
      tags:
      - company_address
      summary: "Permite a edição de informações relacionadas ao endereço da empresa,\
        \ ao ADM do sistema role:[ADM]"
      description: Isso só pode ser feito com o Usuario Conectado
      operationId: updatecompany_address
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NewCompany_Address'
        required: true
      responses:
        "200":
          description: Sucesso!
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NewCompany_Address'
        "400":
          description: Usuário já existe!
        "406":
          description: Usuario Não Encontrado!
      security:
      - bearerAuth: []
      x-swagger-router-controller: CompanyAddress
    post:
      tags:
      - company_address
      summary: "Permite o cadastro de endereço no sistema a partir dos dados, rua,\
        \ numero,cidade,cep,complemento, bairro e ponto de referencia| role:[ADM ]"
      description: Criação de um novo enderço da empresa no sistema
      operationId: createCompanyAddress
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NewCompany_Address'
        required: true
      responses:
        "201":
          description: Sucesso!
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NewCompany_Address'
        "400":
          description: Empresa Cadastrada!
      security:
      - bearerAuth: []
      x-swagger-router-controller: CompanyAddress
  /api/v1/companyAddress/{companyAddressID}:
    delete:
      tags:
      - company_address
      summary: "Permite a Exclusão do endereço da empresa a partir do id | role:[ADM]"
      description: Isso só pode ser feito com o Usuario Conectado
      operationId: deleteCompany_address
      parameters:
      - name: companyAddressID
        in: path
        description: O ID que precisa ser excluído
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: uuid
      responses:
        "200":
          description: Sucesso!
        "406":
          description: Nenhum telefone Encontrado!
      security:
      - bearerAuth: []
      x-swagger-router-controller: CompanyAddress
  /api/v1/companyAddress{companyAddressID}:
    get:
      tags:
      - company_address
      summary: "Permite a pesquisa, a partir do ID do endereço da empresa, do endereç\
        o  | role:[ADM]"
      description: Isso só pode ser feito com o Usuario
      operationId: apiV1CompanyAddresscompanyAddressIDGET
      parameters:
      - name: companyAddressID
        in: path
        description: O ID do telefone que deseja pesquisar
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: uuid
      responses:
        "200":
          description: Sucesso!
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/NewCompany_Address'
                x-content-type: application/json
        "406":
          description: Nenhum Usuario Encontrado!
      security:
      - bearerAuth: []
      x-swagger-router-controller: CompanyAddress
  /api/v1/companyAddress{companyID}:
    get:
      tags:
      - company_address
      summary: "Permite a pesquisa, a partir do ID  da empresa, do endereço  | role:[ADM]"
      description: Isso só pode ser feito com o Usuario
      operationId: apiV1CompanyAddresscompanyIDGET
      parameters:
      - name: companyID
        in: path
        description: O ID do telefone que deseja pesquisar
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: uuid
      responses:
        "200":
          description: Sucesso!
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/NewCompany_Address'
                x-content-type: application/json
        "406":
          description: Nenhum Usuario Encontrado!
      security:
      - bearerAuth: []
      x-swagger-router-controller: CompanyAddress
  /api/v1/showCompanyAddress:
    get:
      tags:
      - company_address
      summary: "Permite o acesso a lista de endereço das empresas do Sistema | role:[ADM]"
      description: "Passa nada Paramentro, retona"
      operationId: listCompanyAddress
      responses:
        "200":
          description: Sucesso!
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/NewCompany_Address'
                x-content-type: application/json
        "406":
          description: Nenhum endereço Encontrado!
      security:
      - bearerAuth: []
      x-swagger-router-controller: CompanyAddress
  /api/v1/companyContact:
    put:
      tags:
      - company_contact
      summary: "Permite a edição de informações relacionadas aos contatos da empresa,\
        \ ao ADM do sistema role:[ADM]"
      description: Isso só pode ser feito com o Usuario Conectado
      operationId: updatecompany_contact
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NewCompany_Contact'
        required: true
      responses:
        "200":
          description: Sucesso!
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NewCompany_Contact'
        "400":
          description: Usuário já existe!
        "406":
          description: Usuario Não Encontrado!
      security:
      - bearerAuth: []
      x-swagger-router-controller: CompanyContact
    post:
      tags:
      - company_contact
      summary: "Permite o cadastro dos contatos da empresa no sistema a partir dos\
        \ dados, email e telefone| role:[ADM ]"
      description: Criação de um novo enderço da empresa no sistema
      operationId: createCompanyContact
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NewCompany_Address'
        required: true
      responses:
        "201":
          description: Sucesso!
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NewCompany_Address'
        "400":
          description: Empresa Cadastrada!
      security:
      - bearerAuth: []
      x-swagger-router-controller: CompanyContact
  /api/v1/companyContact/{companyContactID}:
    delete:
      tags:
      - company_contact
      summary: "Permite a Exclusão do contato da empresa a partir do id | role:[ADM]"
      description: Isso só pode ser feito com o Usuario Conectado
      operationId: deleteCompany_contact
      parameters:
      - name: companyContactID
        in: path
        description: O ID que precisa ser excluído
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: uuid
      responses:
        "200":
          description: Sucesso!
        "406":
          description: Nenhum telefone Encontrado!
      security:
      - bearerAuth: []
      x-swagger-router-controller: CompanyContact
  /api/v1/companyContact{companyContactID}:
    get:
      tags:
      - company_contact
      summary: "Permite a pesquisa dos contados a partir do id  | role:[ADM ]"
      description: Isso só pode ser feito com o Usuario
      operationId: apiV1CompanyContactcompanyContactIDGET
      parameters:
      - name: companyContactID
        in: path
        description: O ID do telefone que deseja pesquisar
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: uuid
      responses:
        "200":
          description: Sucesso!
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Company_Contact'
                x-content-type: application/json
        "406":
          description: Nenhum Usuario Encontrado!
      security:
      - bearerAuth: []
      x-swagger-router-controller: CompanyContact
  /api/v1/companyContact{companyAddressID}:
    get:
      tags:
      - company_contact
      summary: "Permite a pesquisa, a partir do ID da empresa, os contatos  | role:[ADM]"
      description: Isso só pode ser feito com o Usuario
      operationId: apiV1CompanyContactcompanyAddressIDGET
      parameters:
      - name: companyAddressID
        in: path
        description: O ID da empresa em  que o contato pertence
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: uuid
      responses:
        "200":
          description: Sucesso!
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/NewCompany_Contact'
                x-content-type: application/json
        "406":
          description: Nenhum Usuario Encontrado!
      security:
      - bearerAuth: []
      x-swagger-router-controller: CompanyContact
  /api/v1/showCompanyContact:
    get:
      tags:
      - company_contact
      summary: "Permite o acesso a lista dos contatos das empresas do Sistema | role:[ADM]"
      description: "Passa nada Paramentro, retona"
      operationId: listCompany_contact
      responses:
        "200":
          description: Sucesso!
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/NewCompany_Contact'
                x-content-type: application/json
        "406":
          description: Nenhum endereço Encontrado!
      security:
      - bearerAuth: []
      x-swagger-router-controller: CompanyContact
  /api/v1/plan:
    put:
      tags:
      - plan
      summary: "Permite a edição das informaçoes dos planos ao ADM do sistema role:[ADM]"
      description: Isso só pode ser feito com o Usuario Conectado
      operationId: updatePlan
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NewPlan'
        required: true
      responses:
        "200":
          description: Sucesso!
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NewPlan'
        "400":
          description: Usuário já existe!
        "406":
          description: Usuario Não Encontrado!
      security:
      - bearerAuth: []
      x-swagger-router-controller: Plan
    post:
      tags:
      - plan
      summary: "Permite o cadastro de planos no sistema a partir dos dados, descriç\
        ão, preço e nome| role:[ADM ]"
      description: Criação de um novo enderço da empresa no sistema
      operationId: createPlan
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NewPlan'
        required: true
      responses:
        "201":
          description: Sucesso!
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NewPlan'
        "400":
          description: Empresa Cadastrada!
      security:
      - bearerAuth: []
      x-swagger-router-controller: Plan
  /api/v1/showPlans:
    get:
      tags:
      - plan
      summary: "Permite o acesso a lista de planos | role:[ADM]"
      description: "Passa nada Paramentro, retona"
      operationId: listPlan
      responses:
        "200":
          description: Sucesso!
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/NewPlan'
                x-content-type: application/json
        "406":
          description: Nenhum endereço Encontrado!
      security:
      - bearerAuth: []
      x-swagger-router-controller: Plan
  /api/v1/plan{planID}:
    get:
      tags:
      - plan
      summary: "Permite a pesquisa, a partir do ID , do planos  | role:[ADM]"
      description: Isso só pode ser feito com o Usuario
      operationId: apiV1PlanplanIDGET
      parameters:
      - name: planID
        in: path
        description: O ID da empresa em  que o contato pertence
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: uuid
      responses:
        "200":
          description: Sucesso!
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/NewPlan'
                x-content-type: application/json
        "406":
          description: Nenhum Usuario Encontrado!
      security:
      - bearerAuth: []
      x-swagger-router-controller: Plan
  /api/v1/plan/{planID}:
    delete:
      tags:
      - plan
      summary: "Permite a Exclusão do plano a partir do id | role:[ADM]"
      description: Isso só pode ser feito com o Usuario Conectado
      operationId: deletePlan
      parameters:
      - name: planID
        in: path
        description: O ID que precisa ser excluído
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: uuid
      responses:
        "200":
          description: Sucesso!
        "406":
          description: Nenhum telefone Encontrado!
      security:
      - bearerAuth: []
      x-swagger-router-controller: Plan
components:
  schemas:
    user:
      type: object
      allOf:
      - $ref: '#/components/schemas/NewUser'
      - required:
        - userID
        properties:
          userID:
            type: string
            format: uuid
    NewUser:
      required:
      - address
      - email
      - name
      - password
      - phoneNumber
      properties:
        email:
          type: string
        password:
          type: string
        name:
          type: string
        phoneNumber:
          type: string
      example:
        password: password
        phoneNumber: phoneNumber
        name: name
        email: email
    phone:
      required:
      - id
      - userID
      type: object
      properties:
        phoneID:
          type: string
          format: uuid
        userID:
          type: string
          format: uuid
      example:
        phoneID: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        userID: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
      allOf:
      - $ref: '#/components/schemas/NewPhone'
    NewPhone:
      required:
      - number
      properties:
        number:
          type: string
      example:
        number: number
    address:
      required:
      - id
      - userID
      type: object
      properties:
        addressID:
          type: string
          format: uuid
        userID:
          type: string
          format: uuid
      example:
        userID: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        addressID: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
      allOf:
      - $ref: '#/components/schemas/NewAddress'
    NewAddress:
      required:
      - bairro
      - cep
      - city
      - number
      - state
      - street
      properties:
        city:
          type: string
        street:
          type: string
        bairro:
          type: string
        houseNumber:
          type: string
        state:
          type: string
        cep:
          type: string
        referencePoint:
          type: string
        complement:
          type: string
      example:
        city: city
        street: street
        bairro: bairro
        houseNumber: houseNumber
        state: state
        complement: complement
        cep: cep
        referencePoint: referencePoint
    company:
      required:
      - id
      - userID
      type: object
      properties:
        companyID:
          type: string
          format: uuid
        userID:
          type: string
          format: uuid
      example:
        companyID: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        userID: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
      allOf:
      - $ref: '#/components/schemas/NewCompany'
    NewCompany:
      required:
      - IE
      - address
      - cnpj
      - name
      properties:
        name:
          type: string
        cnpj:
          type: string
        IE:
          type: string
      example:
        name: name
        cnpj: cnpj
        IE: IE
    Company_Contact:
      required:
      - companyID
      - contactID
      type: object
      properties:
        companyID:
          type: string
          format: uuid
        contactID:
          type: string
          format: uuid
      example:
        companyID: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        contactID: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
      allOf:
      - $ref: '#/components/schemas/NewCompany_Contact'
    NewCompany_Contact:
      required:
      - email
      - number
      properties:
        number:
          type: string
        email:
          type: string
      example:
        number: number
        email: email
    Company_address:
      required:
      - companyAddressID
      - userID
      type: object
      properties:
        companyID:
          type: string
          format: uuid
        companyAddressID:
          type: string
          format: uuid
      allOf:
      - $ref: '#/components/schemas/NewCompany_Address'
    NewCompany_Address:
      required:
      - bairro
      - cep
      - city
      - number
      - state
      - street
      properties:
        city:
          type: string
        street:
          type: string
        bairro:
          type: string
        houseNumber:
          type: string
        state:
          type: string
        cep:
          type: string
        referencePoint:
          type: string
        complement:
          type: string
      example:
        city: city
        street: street
        bairro: bairro
        houseNumber: houseNumber
        state: state
        complement: complement
        cep: cep
        referencePoint: referencePoint
    plan:
      required:
      - companyID
      - planID
      properties:
        companyID:
          type: string
          format: uuid
        planID:
          type: string
      allOf:
      - $ref: '#/components/schemas/NewPlan'
    NewPlan:
      required:
      - description
      - name
      - value
      properties:
        name:
          type: string
        description:
          type: string
        value:
          type: number
      example:
        name: name
        description: description
        value: 0.8008281904610115
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
